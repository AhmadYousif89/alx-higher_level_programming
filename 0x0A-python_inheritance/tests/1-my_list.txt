This is a doctest file for the module ``1-my_list.py``
==========================================================

Importing the ``MyList`` Class
======================================
	>>> MyList = __import__('1-my_list').MyList

Usage
=====

``MyList`` is a drived class from the builtin class (list):
	- Methods:
		print_sorted: Print the elements of the list in a sorted order.

Test cases:
===========
						=================
========================= General Tests ===========================
						=================					
Testing if MyList inherits from list:
	>>> issubclass(MyList, list)
	True

Testing the module docstring:
	>>> mod = __import__("1-my_list").__doc__
	>>> len(mod) > 1
	True

Testing the class docstring:
	>>> cls = __import__("1-my_list").MyList.__doc__
	>>> len(cls) > 1
	True

Testing the method docstring:
	>>> m = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(m) > 1
	True

						================
========================= Valid Outputs ===========================
						================
Testing for empty list:
	>>> l = MyList()
	>>> l.print_sorted()
	[]

Testing that appendng works:
	>>> l.append(1)
	>>> l.append(2)
	>>> l.append(3)
	>>> print(l)
	[1, 2, 3]

Testing for list already in correct order:
	>>> l.print_sorted()
	[1, 2, 3]

Testing for reversed order list:
	>>> l = MyList()
	>>> l.append(3)
	>>> l.append(2)
	>>> l.append(1)
	>>> print(l)
	[3, 2, 1]
	>>> l.print_sorted()
	[1, 2, 3]
	>>> print(l)
	[3, 2, 1]

Testing for one negative number:
	>>> l.append(-1)
	>>> l.append(4)
	>>> print(l)
	[3, 2, 1, -1, 4]
	>>> l.print_sorted()
	[-1, 1, 2, 3, 4]
	>>> print(l)
	[3, 2, 1, -1, 4]

Testing for all negative numbers:
	>>> l = MyList()
	>>> l.append(-10)
	>>> l.append(-1)
	>>> l.append(-7)
	>>> l.append(-2)
	>>> l.append(-8)
	>>> print(l)
	[-10, -1, -7, -2, -8]
	>>> l.print_sorted()
	[-10, -8, -7, -2, -1]
	>>> print(l)
	[-10, -1, -7, -2, -8]

						========================
========================= TypeError Outputs ===========================
						========================
Testing with too many arguments:
	  >>> l.print_sorted(1)
	  Traceback (most recent call last):
	  TypeError: print_sorted() takes 1 positional argument but 2 were given
