This is a doctest file for the module ``5-text_indentation.py``
===============================================================

Importing the ``text_indentation`` function
===========================================
	>>> text_indentation = __import__('5-text_indentation').text_indentation

Usage
=====

The ``text_indentation(text)`` function takes one argument:
- text (type string): The text to be printed.
- Example: text_indentation("Hi. There") outputs:   Hi.
			                                        <Newline>
			                                        There


Test cases:
===========
						=================
========================= Valid Outputs ===========================
						=================

Testing a string without any special character:
    >>> text_indentation("Hello world")
    Hello world

Testing with spaces at the beginning of the line:
    >>> text_indentation("   Hi there.")
    Hi there.
    <BLANKLINE>

Testing with spaces at the end of the line:
    >>> text_indentation("Hi there.   ")
    Hi there.
    <BLANKLINE>

Testing with two special characters:
	>>> text_indentation("Hi? there.")
	Hi?
	<BLANKLINE>
	there.
	<BLANKLINE>

Testing with all special characters:
	>>> text_indentation("Hi. there: How are you?")
	Hi.
	<BLANKLINE>
	there:
	<BLANKLINE>
	How are you?
	<BLANKLINE>

Testing with only spaces:
    >>> text_indentation("        ")

Testing with mixed space positions
    >>> text_indentation("    This is.    working fine.   ")
    This is.
    <BLANKLINE>
    working fine.
    <BLANKLINE>

Testing with the character '\n' inside the string:
    >>> text_indentation("Let's print a newline Here:\nWorked!.")
    Let's print a newline Here:
    <BLANKLINE>
    <BLANKLINE>
    Worked!.
    <BLANKLINE>

Testing with leading multiple newline characters:
    >>> text_indentation("\n\n\n I have three blank lines above me.")
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    I have three blank lines above me.
    <BLANKLINE>

Testing with a newline between 2 statments:
    >>> text_indentation("A sneaky \n new line.")
    A sneaky
    new line.
    <BLANKLINE>

Testing with large text:
	>>> text = """This is a test case.
	... It spans multiple lines.
	... You can include as much text as needed.
	... """
	>>> text_indentation(text) # doctest: +NORMALIZE_WHITESPACE
	This is a test case.
	<BLANKLINE>
	It spans multiple lines.
	<BLANKLINE>
	You can include as much text as needed.
	<BLANKLINE>

Testing with large text:
	>>> text = """Lorem ipsum dolor sit amet, consectetur adipiscing elit.
	... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere?
	... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud:
	... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere.
	... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum
	... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo
	... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum
	... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio
	... beatiorem! Iam ruinas videres
	... """
    >>> text_indentation(text)  # doctest: +NORMALIZE_WHITESPACE
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

						====================
========================= TypeError Outputs ===========================
						====================

Testing with wrong input type (None):
    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
